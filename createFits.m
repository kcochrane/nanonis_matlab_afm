function [fitresult, gof] = createFits(BiascalcV, FrequencyShiftHz, file)
%CREATEFITS(BIASCALCV,FREQUENCYSHIFTHZ,BIASCALCV1,FREQUENCYSHIFTHZ1,BIASCALCV2,FREQUENCYSHIFTHZ2,BIASCALCV3,FREQUENCYSHIFTHZ3)
%  Create fits.
%
%  Data for 'untitled fit 1' fit:
%      X Input : BiascalcV
%      Y Output: FrequencyShiftHz
%  Data for 'untitled fit 2' fit:
%      X Input : BiascalcV1
%      Y Output: FrequencyShiftHz1
%  Data for 'untitled fit 3' fit:
%      X Input : BiascalcV2
%      Y Output: FrequencyShiftHz2
%  Data for 'untitled fit 4' fit:
%      X Input : BiascalcV3
%      Y Output: FrequencyShiftHz3
%  Output:
%      fitresult : a cell-array of fit objects representing the fits.
%      gof : structure array with goodness-of fit info.
%
%  See also FIT, CFIT, SFIT.

%  Auto-generated by MATLAB on 27-Feb-2015 13:33:09

%% Initialization.

% Initialize arrays to store fits and goodness-of-fit.
fitresult = cell( 1, 1 );
gof = struct( 'sse', cell( 4, 1 ), ...
    'rsquare', [], 'dfe', [], 'adjrsquare', [], 'rmse', [] );

%% Fit: 'untitled fit 1'.
[xData, yData] = prepareCurveData( BiascalcV, FrequencyShiftHz);

% Set up fittype and options.
ft = fittype( '-0.5*a*(b-x)^2+c', 'independent', 'x', 'dependent', 'y' );
opts = fitoptions( 'Method', 'NonlinearLeastSquares' );
opts.Display = 'Off';
opts.StartPoint = [0.432032720927933 0.664640323310627 0.842668405556282];

% Fit model to data.
[fitresult{1}, gof(1)] = fit( xData, yData, ft, opts );

% Plot fit with data.
figure( 'Name', 'untitled fit 1' );
h = plot( fitresult{1}, xData, yData );
legend( h, 'FrequencyShiftHz vs. BiascalcV', 'untitled fit 1', 'Location', 'SouthEast' );
% Label axes
xlabel BiascalcV
ylabel FrequencyShiftHz
title(['a: ', num2str(fitresult{1}.a) ', b: ' num2str(fitresult{1}.b) ', ' file])
%print([file '_topo1.png']);
%plot2svg(fullfile(pwd,'/',[file '_backwards.svg']));
grid on




